{"version":3,"sources":["Components/AllData.js","Components/Balance.js","Components/CreateAccount.js","Components/Deposit.js","Components/Images/BBLogo.png","Components/Home.js","Components/Login.js","Components/Logout.js","Components/Withdraw.js","Components/Transfer.js","Components/DeleteAccount.js","Components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["AllData","dataList","users","setUsers","map","user","name","email","balance","_id","fetch","then","response","json","data","className","scope","Balance","useContext","UserContext","CreateAccount","setLoggedIn","setCurrentUser","useState","setName","setEmail","password","setPassword","success","setSuccess","btnDisable","setBtnDisable","passwordError","setPasswordError","nameError","setNameError","emailError","setEmailError","handleSubmit","url","toLowerCase","a","method","resCreate","status","alert","sessionStorage","setItem","handleChange","e","validated","target","id","value","test","length","type","onClick","placeholder","onChange","minLength","disabled","Deposit","currentUser","depositAmt","setDepositAmt","negError","setNegError","newBalance","Number","min","undefined","Home","src","BBLogo","alt","Login","loggedIn","res","onsubmit","style","Logout","logged","clear","Withdraw","withdrawalAmt","setWithdrawalAmt","warnOverdraft","setWarnOverdraft","updateBalance","Transfer","transferAmt","setTransferAmt","transferEmail","setTransferEmail","transError","setTransError","handleNewTransfer","userUrl","balanceUrl","transferUser","transferBalance","newTransferBalance","transBalanceUrl","DeleteAccount","newVal","checked","handleClick","for","setTimeout","window","location","reload","NavBar","to","title","class","path","createContext","App","getItem","accountExists","setAccountExists","useEffect","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA6DeA,EA3DC,SAAC,GAAyB,IAEpCC,EAFaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAIxB,GAAID,EAiBFD,EAAWC,EAAME,KAAI,SAAAC,GACnB,OACA,+BACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,QACV,6BAAKF,EAAKG,YAHHH,EAAKI,YAnBR,CAERC,MADY,gBAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJX,EAAS,YAAIW,IACbb,EAAWa,EAAKV,KAAI,SAAAC,GAClB,OACE,+BACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,QACV,6BAAKF,EAAKG,YAHHH,EAAKI,WAqBxB,OACE,sBAAKM,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,iDAEEb,EACA,qBAAKa,UAAU,4BAAf,SACE,wBAAOA,UAAU,mCAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGf,SAKP,uECjCKgB,EApBC,WAEd,IAAMZ,EAAOa,qBAAWC,GAClBX,EAAUH,EAAKG,QAErB,OACE,8BACE,sBAAKO,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,wDAEF,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SAAyB,uCAAUP,OAClCA,GAAW,EAAI,mBAAGO,UAAU,WAAb,sEAAsF,0CAAaV,EAAKC,KAAlB,gH,uBCwIjGc,EAtJO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAEpC,EAAwBC,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0CR,oBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAGMC,EAAe,WACnB,IAAMC,EAAG,0BAAsBjC,EAAtB,YAA8BC,EAAMiC,cAApC,YAAqDd,GAC9D,sBAAC,4BAAAe,EAAA,sEACyB/B,MAAM6B,EAAK,CACjCG,OAAQ,SAFX,UAIyB,OAHlBC,EADP,QAIcC,OAJd,uBAMGC,MAAM,wGANT,kBAOU,MAPV,OAUyB,MAArBF,EAAUC,SAEXtB,EAAe,CAAChB,KAAMA,EAAMC,MAAOA,EAAMiC,cAAehC,QAAS,IACjEsC,eAAeC,QAAQ,OAAvB,UAAkCzC,IAClCwC,eAAeC,QAAQ,QAAvB,UAAmCxC,IACnCuC,eAAeC,QAAQ,UAAvB,UAAqC,IAErClB,GAAW,GACXR,GAAY,IAlBf,0CAAD,IA2BI2B,EAAe,SAACC,GACpB,IAAIC,GAAY,EAEG,SAAhBD,EAAEE,OAAOC,KACV5B,EAAQyB,EAAEE,OAAOE,OAEfH,IADoB,KAAnBD,EAAEE,OAAOE,QAAgB,gDAAgDC,KAAK/C,IAAuB,KAAbmB,GAKrE,KAAnBuB,EAAEE,OAAOE,MACVlB,GAAa,GAEbA,GAAa,IAIE,UAAhBc,EAAEE,OAAOC,KACV3B,EAASwB,EAAEE,OAAOE,OAEhBH,KADC,gDAAgDI,KAAKL,EAAEE,OAAOE,QAAmB,KAAT/C,GAA4B,KAAboB,GAKvF,gDAAgD4B,KAAKL,EAAEE,OAAOE,OAC/DhB,GAAc,GAEdA,GAAc,GAEJ,KAAT/B,GACD6B,GAAa,IAIE,aAAhBc,EAAEE,OAAOC,KACVzB,EAAYsB,EAAEE,OAAOE,OAEnBH,KADoB,KAAnBD,EAAEE,OAAOE,OAAgBJ,EAAEE,OAAOE,MAAME,QAAU,GAAc,KAATjD,GAAe,gDAAgDgD,KAAK/C,IAK3H0C,EAAEE,OAAOE,MAAME,OAAS,EACzBtB,GAAiB,GAEjBA,GAAiB,GAEP,KAAT3B,GACD6B,GAAa,GAEV,gDAAgDmB,KAAKL,EAAEE,OAAOE,QACjEhB,GAAc,IAII,KAAnBY,EAAEE,OAAOE,OACVtB,GAAc,GAEM,KAAnBkB,EAAEE,OAAOE,OAAgBH,GAC1BnB,GAAc,IAWlB,OACE,8BACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,kDAEF,qBAAKA,UAAU,YAAf,UACa,IAAZa,EACC,qCACA,mBAAGb,UAAU,YAAb,uJACA,wBAAQyC,KAAK,SAASC,QAhBF,WAC1B5B,GAAW,GACXP,EAAe,MACfD,GAAY,IAa8CN,UAAU,eAA9D,uCAGA,qCACE,gGACA,mBAAGA,UAAU,YAAb,+JACA,+BACE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,oBAA4C,uBAC5C,uBAAOyC,KAAK,OAAOE,YAAY,YAAYN,GAAG,OAAOO,SAAUX,EAAcjC,UAAU,iBACtFmB,EAAY,mBAAGnB,UAAU,kBAAb,uDAA+E,KAC5F,uBAAOA,UAAU,aAAjB,qBAJF,IAIgD,uBAC9C,uBAAOyC,KAAK,QAAQE,YAAY,qBAAqBN,GAAG,QAAQO,SAAUX,EAAcjC,UAAU,iBACjGqB,EAAa,mBAAGrB,UAAU,kBAAb,iEAAyF,KACvG,uBAAOA,UAAU,aAAjB,uBAPF,IAOkD,uBAChD,uBAAOyC,KAAK,WAAWI,UAAU,IAAIF,YAAY,WAAWN,GAAG,WAAWO,SAAUX,EAAcjC,UAAU,iBAC3GiB,EAAgB,mBAAGjB,UAAU,kBAAb,+DAAuF,KACxG,uBACCe,EAAa,wBAAQ0B,KAAK,SAASK,UAAU,EAAMJ,QAASnB,EAAcvB,UAAU,eAAvE,+BAAmH,wBAAQyC,KAAK,SAASK,UAAU,EAAOJ,QAASnB,EAAcvB,UAAU,eAAxE,+CClDlI+C,EAxFC,SAAC,GAAqC,IAAnCxC,EAAkC,EAAlCA,eAAgByC,EAAkB,EAAlBA,YAEjC,EAAsCxC,mBAAS,GAA/C,mBAAQyC,EAAR,KAAoBC,EAApB,KACA,EAAgC1C,oBAAS,GAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAAsCN,oBAAS,GAA/C,mBAAQO,EAAR,KAAoBC,EAApB,KACA,EAAkCR,oBAAS,GAA3C,mBAAQ2C,EAAR,KAAkBC,EAAlB,KAEM3D,EAAUuD,EAAYvD,QAwBtB8B,EAAe,WACnB,IAAM/B,EAAQwD,EAAYxD,MAEpB6D,EAPWC,OAAO7D,GAAW6D,OAAOL,GAQpCzB,EAAG,iCAA6BhC,EAA7B,YAAsC6D,GAC/C,sBAAC,sBAAA3B,EAAA,sEAC0B/B,MAAM6B,EAAK,CAClCG,OAAQ,QAFX,OAK0B,MAL1B,OAKeE,SAEZtB,EAAe,CAAChB,KAAMyD,EAAYzD,KAAMC,MAAOwD,EAAYxD,MAAOC,QAAS6D,OAAOD,KAClFH,EAAc,GACdpC,GAAW,GACXiB,eAAeC,QAAQ,UAAvB,UAAqCqB,KAVxC,0CAAD,IAuBF,OACE,8BACE,sBAAKrD,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,kDAEF,sBAAKA,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,8CAA0D,uCAAUP,QACnEoB,EACC,qCACA,yLACA,wBAAQ4B,KAAK,SAASzC,UAAU,eAAe0C,QAflC,WACrB5B,GAAW,IAcH,qCAGA,+BACE,sBAAKd,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,wCACA,uBAAOyC,KAAK,SAASc,IAAI,IAAIZ,YAAY,iBAAiB3C,UAAU,eAAe4C,SAnE5E,SAACV,GACpBgB,EAAchB,EAAEE,OAAOE,YAEDkB,IAAnBtB,EAAEE,OAAOE,OACVtB,GAAc,GAEO,KAAnBkB,EAAEE,OAAOE,OACXtB,GAAc,GAEZkB,EAAEE,OAAOE,OAAS,GACpBtB,GAAc,GACdoC,GAAY,IAEZA,GAAY,MAuDDD,EAAW,mBAAGnD,UAAU,kBAAb,qKAA6L,uBACxMe,EAAa,wBAAQ0B,KAAK,SAASC,QAASnB,EAAcvB,UAAU,eAAe8C,UAAU,EAAhF,0BAA+G,wBAAQL,KAAK,SAASC,QAASnB,EAAcvB,UAAU,eAAe8C,UAAU,EAAhF,wCChF9H,MAA0B,mCCc1BW,EAZF,WACX,OACE,sBAAKzD,UAAU,OAAf,UACE,qBAAK0D,IAAKC,EAAQ3D,UAAU,eAAe4D,IAAI,kBAC/C,sBAAK5D,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,2BACA,mBAAGA,UAAU,YAAb,qR,QCkHO6D,EAxHD,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUxD,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAEtC,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAA0Cd,oBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAoCV,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAGMO,EAAe,WAEnB,IAAMC,EAAG,yBAAqBhC,EAAMiC,cAA3B,YAA4Cd,GACrD,sBAAC,8BAAAe,EAAA,sEACmB/B,MAAM6B,GADzB,UAEmB,OADZuC,EADP,QAEQlC,QAAiC,MAAfkC,EAAIlC,OAF9B,gBAGGC,MAAM,mJAHT,uCAKsBiC,EAAIjE,OAL1B,QAKSC,EALT,UAQKO,GAAY,GAEZC,EAAe,eAAIR,IACnBgC,eAAeC,QAAQ,OAAvB,UAAkCjC,EAAKR,OACvCwC,eAAeC,QAAQ,QAAvB,UAAmCjC,EAAKP,QACxCuC,eAAeC,QAAQ,UAAvB,UAAqCjC,EAAKN,WAb/C,2CAAD,IAoCIwC,EAAe,SAACC,GACpB,IAAIC,GAAY,EAEG,UAAhBD,EAAEE,OAAOC,KACV3B,EAASwB,EAAEE,OAAOE,OAEhBH,EADoB,KAAnBD,EAAEE,OAAOE,OAA6B,KAAb3B,EAKN,KAAnBuB,EAAEE,OAAOE,MACVhB,GAAc,GAEdA,GAAc,IAIC,aAAhBY,EAAEE,OAAOC,KACVzB,EAAYsB,EAAEE,OAAOE,OAEnBH,EADoB,KAAnBD,EAAEE,OAAOE,OAAgBJ,EAAEE,OAAOE,MAAME,QAAU,GAAkB,KAAb7B,EAKvDuB,EAAEE,OAAOE,MAAME,OAAS,EACzBtB,GAAiB,GAEjBA,GAAiB,GAEN,KAAV1B,GACD8B,GAAc,IAII,KAAnBY,EAAEE,OAAOE,OACVtB,GAAc,GAEM,KAAnBkB,EAAEE,OAAOE,OAAgBH,GAC1BnB,GAAc,IAKlB,OACE,8BACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,yCAEF,qBAAKA,UAAU,YAAf,SACG8D,EACD,kGAEA,sBAAME,SAAUzC,EAAhB,SACE,sBAAKvB,UAAU,OAAf,UACA,uBAAOA,UAAU,aAAjB,oBADA,IAC6C,uBAC7C,uBAAOA,UAAU,eAAeyC,KAAK,OAAOG,SAAUX,EAAcI,GAAG,QAAQM,YAAY,yBAC1FtB,EAAa,mBAAGrB,UAAU,kBAAb,yJAAiL,KAC/L,uBAAOA,UAAU,aAAjB,uBAJA,IAIgD,uBAChD,uBAAOyC,KAAK,WAAWI,UAAU,IAAIF,YAAY,WAAWN,GAAG,WAAWO,SAAUX,EAAcjC,UAAU,iBAC3GiB,EAAgB,mBAAGjB,UAAU,kBAAb,+DAAuF,KANxG,IAM+G,uBAC9Ge,EAAa,wBAAQ0B,KAAK,SAASK,UAAU,EAAMJ,QAASnB,EAAcvB,UAAU,eAAvE,mBAAuG,wBAAQyC,KAAK,SAASK,UAAU,EAAOJ,QAASnB,EAAcvB,UAAU,eAAxE,mBACrH,wBAAQyC,KAAK,SAASK,UAAU,EAAOJ,QA9ExB,WAEvB,sBAAC,8BAAAhB,EAAA,sEACmB/B,MAFR,6CACX,cACOoE,EADP,gBAEoBA,EAAIjE,OAFxB,QAEOC,EAFP,UAKGO,GAAY,GACZC,EAAe,eAAIR,IACnBgC,eAAeC,QAAQ,OAAvB,UAAkCjC,EAAKR,OACvCwC,eAAeC,QAAQ,QAAvB,UAAmCjC,EAAKP,QACxCuC,eAAeC,QAAQ,UAAvB,UAAqCjC,EAAKN,WAT7C,0CAAD,IA4E0EO,UAAU,eAAeiE,MAAO,CAAC,WAAc,QAAjH,6CC1EGC,EAtCA,SAAC,GAA+C,IAA7C3D,EAA4C,EAA5CA,eAAgBD,EAA4B,EAA5BA,YAE5B6D,EAFwD,EAAfL,SAY7C,OACE,8BACGK,EACC,sBAAKnE,UAAU,OAAf,UACA,qBAAKA,UAAU,cAAf,SACE,0DAEF,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SAAyB,uHACzB,wBAAQ0C,QAjBM,WACpBX,eAAeqC,QACf7D,EAAe,MACfD,GAAY,GACZ6D,GAAS,GAa6B1B,KAAK,SAASzC,UAAU,eAAxD,kCAIJ,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,8CAEF,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,YAAb,SAAyB,6FCqEpBqE,EAjGE,SAAC,GAAqC,IAAnC9D,EAAkC,EAAlCA,eAAgByC,EAAkB,EAAlBA,YAClC,EAA4CxC,mBAAS,GAArD,mBAAQ8D,EAAR,KAAuBC,EAAvB,KACA,EAAgC/D,oBAAS,GAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAA4CN,oBAAS,GAArD,mBAAQgE,EAAR,KAAuBC,EAAvB,KACA,EAAsCjE,oBAAS,GAA/C,mBAAQO,EAAR,KAAoBC,EAApB,KACA,EAAkCR,oBAAS,GAA3C,mBAAQ2C,EAAR,KAAkBC,EAAlB,KAEM3D,EAAUuD,EAAYvD,QA4BtB8B,EAAe,WACnB,IAAM/B,EAAQwD,EAAYxD,MAEpB6D,EAXc,WACpB,IAAIA,EAAaC,OAAO7D,GAAW6D,OAAOgB,GAI1C,OAHGjB,GAAc,GACfoB,GAAiB,GAEZpB,EAMYqB,GACnB,GAAIrB,EAAa,EACfoB,GAAiB,OADnB,CAIE,IAAMjD,EAAG,iCAA6BhC,EAA7B,YAAsC6D,GAC/C,sBAAC,sBAAA3B,EAAA,sEAC0B/B,MAAM6B,EAAK,CAClCG,OAAQ,QAFX,OAK0B,MAL1B,OAKeE,SAEZtB,EAAe,CAAEf,MAAOwD,EAAYxD,MAAOD,KAAMyD,EAAYzD,KAAME,QAAS6D,OAAOD,KACnFkB,EAAiB,GACjBzD,GAAW,GACXiB,eAAeC,QAAQ,UAAvB,UAAqCqB,KAVxC,0CAAD,KAuBJ,OACE,8BACE,sBAAKrD,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qDAEF,sBAAKA,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,8CAA0D,uCAAUP,SACjD,IAAlB+E,EAAyB,oBAAGxE,UAAU,WAAb,oGAA+G,uBAA/G,iGAAuN,KAChPa,EACC,qCACA,4LACA,wBAAQ4B,KAAK,SAASzC,UAAU,eAAe0C,QAhBlC,WACrB5B,GAAW,IAeH,wCAGA,+BACE,sBAAKd,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,2CACA,uBAAOyC,KAAK,SAASc,IAAI,IAAIZ,YAAY,oBAAoB3C,UAAU,eAAe4C,SA5E/E,SAACV,GACpBqC,EAAiBrC,EAAEE,OAAOE,OAEvBkC,GAAeC,GAAiB,GACb,OAAnBvC,EAAEE,OAAOE,OACVtB,GAAc,GAEM,KAAnBkB,EAAEE,OAAOE,OACVtB,GAAc,GAEZkB,EAAEE,OAAOE,OAAS,GACpBtB,GAAc,GACdoC,GAAY,IAEZA,GAAY,MA+DDD,EAAW,mBAAGnD,UAAU,kBAAb,oKAA4L,uBACvMe,EAAa,wBAAQ0B,KAAK,SAASC,QAASnB,EAAcvB,UAAU,eAAe8C,UAAU,EAAhF,2BAAgH,wBAAQL,KAAK,SAASC,QAASnB,EAAcvB,UAAU,eAAe8C,UAAU,EAAhF,yCC4F/H6B,EAnLE,SAAC,GAAqC,IAAnC3B,EAAkC,EAAlCA,YAAazC,EAAqB,EAArBA,eAE/B,EAAwCC,mBAAS,GAAjD,mBAAQoE,EAAR,KAAqBC,EAArB,KACA,EAA4CrE,mBAAS,IAArD,mBAAQsE,EAAR,KAAuBC,EAAvB,KACA,EAAsCvE,oBAAS,GAA/C,mBAAQa,EAAR,KAAoBC,EAApB,KACA,EAAgCd,oBAAS,GAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAA4CN,oBAAS,GAArD,mBAAQgE,EAAR,KAAuBC,EAAvB,KACA,EAAsCjE,oBAAS,GAA/C,mBAAQO,EAAR,KAAoBC,EAApB,KACA,EAAkCR,oBAAS,GAA3C,mBAAQ2C,EAAR,KAAkBC,EAAlB,KACA,EAAsC5C,oBAAS,GAA/C,mBAAQwE,EAAR,KAAoBC,EAApB,KAEMC,EAAoB,WACxBL,EAAe,GACfE,EAAiB,IACjBzD,GAAc,GACdR,GAAW,GACX2D,GAAiB,GACjBzD,GAAc,GACdoC,GAAY,GACZ6B,GAAc,IAgBVhD,EAAe,SAACC,GAGD,WAAhBA,EAAEE,OAAOC,KACVwC,EAAe3C,EAAEE,OAAOE,OAErBkC,GAAeC,GAAiB,GAChCvC,EAAEE,OAAOE,MAAQ,GAAuB,KAAlBwC,GACrB9D,GAAc,GAGdkB,EAAEE,OAAOE,OAAS,GACpBtB,GAAc,GACdoC,GAAY,IAEZA,GAAY,IAII,kBAAhBlB,EAAEE,OAAOC,KACX0C,EAAiB7C,EAAEE,OAAOE,OACJ,KAAnBJ,EAAEE,OAAOE,QAA6B,IAAba,GAAsByB,EAAc,EAK1C,KAAnB1C,EAAEE,OAAOE,MACVhB,GAAc,GAEdA,GAAc,KAOdC,EAAe,WACnB,IAAM/B,EAAQwD,EAAYxD,MACpB6D,EA9Cc,WACpB,IAAIA,EAAaC,OAAON,EAAYvD,SAAW6D,OAAOsB,GAItD,OAHGvB,GAAc,GACfoB,GAAiB,GAEZpB,EAyCYqB,GACnB,GAAIrB,EAAa,EAGf,OAFAoB,GAAiB,QACjB3C,MAAM,oPAIN,IAAMqD,EAAO,6BAA0BL,EAAcrD,eAC/C2D,EAAU,iCAA6B5F,EAA7B,YAAsC6D,GAEtD,sBAAC,kCAAA3B,EAAA,sEAEmB/B,MAAMwF,GAFzB,UAKmB,OAHZpB,EAFP,QAKQlC,OALR,uBAMGC,MAAM,+LANT,0CAU4BiC,EAAIjE,OAVhC,aAUOuF,EAVP,SAYoBhC,GAAc,GAZlC,kCAcqB1D,MAAMyF,EAAY,CAClCzD,OAAQ,QAfb,QAkBqB,MAlBrB,OAkBUE,SACLtB,EAAe,2BAAIyC,GAAL,IAAkBvD,QAAS6D,OAAOD,MAChDtB,eAAeC,QAAQ,UAAvB,UAAqCqB,IAjFhBiC,EAmF4BD,EAAa5F,QAAxD8F,EAlFGjC,OAAOgC,GAAmBhC,OAAOsB,GAmFpCY,EALc,iCAK8BH,EAAa7F,MAL3C,YAKoD+F,GACxE,sBAAC,sBAAA7D,EAAA,sEAC0B/B,MAAM6F,EAAiB,CAC9C7D,OAAQ,QAFX,OAK0B,MAL1B,OAKeE,SACZgD,EAAe,GACf/D,GAAW,IAPd,0CAAD,IAxBL,wBAuCGmE,GAAc,GAvCjB,kCA7DyB,IAACK,IA6D1B,MAAD,IAkDJ,OACE,8BACE,sBAAKtF,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,+EAEF,qBAAKA,UAAU,YAAf,SACCgF,EACC,qCACE,4BAAG,ujBACH,wBAAQvC,KAAK,SAASC,QAASwC,EAAmBlF,UAAU,eAA5D,qCAGF,qCACA,oBAAGA,UAAU,YAAb,8CAA0D,uCAAUgD,EAAYvD,eAClE,IAAZoB,EACA,qCACA,mBAAGb,UAAU,YAAb,kMACA,wBAAQyC,KAAK,SAASC,QAASwC,EAAmBlF,UAAU,eAA5D,qCAGA,qCACE,iHACA,mBAAGA,UAAU,YAAb,iTACA,+BACE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,kEAA0F,uBAC1F,uBAAOyC,KAAK,OAAOE,YAAY,0BAA0BN,GAAG,gBAAgBO,SAAUX,EAAcjC,UAAU,iBAC7GqB,EAAa,mBAAGrB,UAAU,kBAAb,iEAAyF,KACvG,uBAAOA,UAAU,aAAjB,yCACA,uBAAOyC,KAAK,SAASc,IAAI,IAAIZ,YAAY,kBAAkB3C,UAAU,eAAe4C,SAAUX,EAAcI,GAAG,WAC9Gc,EAAW,mBAAGnD,UAAU,kBAAb,4MAAoO,uBAC/Oe,EAAa,wBAAQ0B,KAAK,SAASK,UAAU,EAAMJ,QAASnB,EAAcvB,UAAU,eAAvE,4BAAgH,wBAAQyC,KAAK,SAASK,UAAU,EAAOJ,QAASnB,EAAcvB,UAAU,eAAxE,+CC7FjIyF,MAxEf,YAAsE,IAA7CzC,EAA4C,EAA5CA,YAAa1C,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAEjD,EAAoCC,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KA6CA,OACE,8BACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,gEAEF,sBAAKA,UAAU,YAAf,UACE,+DACA,mBAAGA,UAAU,YAAb,4UAGA,+BACE,sBAAKA,UAAU,OAAf,UACE,uBAAOyC,KAAM,WAAYJ,GAAG,YAAY9C,KAAK,YAAYmD,QAAS,SAACR,GAAD,OAxD1D,SAACA,GACnB,IAAIwD,GAAWxD,EAAEE,OAAOuD,QACxB3E,EAAc0E,GAsDqEE,CAAY1D,MACrF,uBAAO2D,IAAI,YAAY7F,UAAU,aAAjC,oGACA,uBACEe,EAAa,wBAAQ0B,KAAK,SAASK,UAAU,EAAM9C,UAAU,eAAhD,+BAA4F,wBAAQyC,KAAK,SAASK,UAAU,EAAO9C,UAAU,eAAe0C,QAtDlK,WAEnB,GAAyB,oBAAtBM,EAAYxD,MAAf,CAMA,IAAMA,EAAQwD,EAAYxD,MACpBgC,EAAG,iCAA6BhC,GAEtC,sBAAC,4BAAAkC,EAAA,sEACmB/B,MAAM6B,EAAK,CAC3BG,OAAQ,WAFX,UAKmB,OAJZoC,EADP,QAKQlC,OALR,uBAMGC,MAAM,kDANT,kBAOU,MAPV,OAUmB,MAAfiC,EAAIlC,SACLC,MAAM,kJAGNgE,YAAW,WAET/D,eAAeqC,QACf7D,EAAe,MACfD,GAAY,GAEZyF,OAAOC,SAASC,WACf,IArBN,0CAAD,QAREnE,MAAM,0JAmD6G,6CC+C1GoE,EA/FA,SAAC,GAAmE,IAAjE/G,EAAgE,EAAhEA,MAAO2E,EAAyD,EAAzDA,SAAUxD,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eAAgByC,EAAkB,EAAlBA,YAE9D,OACE,cAAC,IAAD,UACA,gCACE,qBAAKhD,UAAU,8CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMmG,GAAG,IAAInG,UAAU,eAAeoG,MAAM,qBAA5C,sBACA,wBAAQpG,UAAU,iBAAiByC,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAAlK,SACE,sBAAMzC,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BqC,GAAG,YAA7C,UACE,oBAAIrC,UAAU,aAAd,SACqB,OAAhBgD,EACD,qCACE,oBAAIhD,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,kBAAkBnG,UAAU,WAAWoG,MAAM,2CAAtD,8BAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,SAASnG,UAAU,WAAWoG,MAAM,wDAA7C,wBAIJ,qCACE,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,WAAWnG,UAAU,WAAWoG,MAAM,kCAA/C,uBAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,YAAYnG,UAAU,WAAWoG,MAAM,uCAAhD,wBAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,YAAYnG,UAAU,WAAWoG,MAAM,iEAAhD,wBAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,WAAWnG,UAAU,WAAWoG,MAAM,kCAA/C,uBAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,YAAYnG,UAAU,WAAWoG,MAAM,sBAAhD,wBAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,kBAAkBnG,UAAU,WAAWoG,MAAM,6BAAtD,8BAEF,oBAAIpG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMmG,GAAG,UAAUnG,UAAU,WAAWoG,MAAM,UAA9C,2BAKW,OAAhBpD,EACD,qBAAKhD,UAAU,kBAAf,SACE,uBAAMqG,MAAM,cAAZ,sBAAoCrD,EAAYzD,KAAhD,SAEF,qCAMN,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+G,KAAK,kBAAZ,SACE,cAAC,EAAD,CAAexC,SAAUA,EAAUxD,YAAaA,EAAaC,eAAgBA,MAE/E,cAAC,IAAD,CAAO+F,KAAK,SAAZ,SACE,cAAC,EAAD,CAAOxC,SAAUA,EAAUxD,YAAaA,EAAaC,eAAgBA,MAEvE,cAAC,IAAD,CAAO+F,KAAK,WAAZ,SACE,cAAC,EAAD,CAAS/F,eAAgBA,EAAgByC,YAAaA,MAExD,cAAC,IAAD,CAAOsD,KAAK,YAAZ,SACE,cAAC,EAAD,CAAU/F,eAAgBA,EAAgByC,YAAaA,MAEzD,cAAC,IAAD,CAAOsD,KAAK,YAAZ,SACE,cAAC,EAAD,CAAU/F,eAAgBA,EAAgByC,YAAaA,EAAa1C,YAAaA,MAEnF,cAAC,IAAD,CAAOgG,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,CAASnH,MAAOA,MAElB,cAAC,IAAD,CAAOmH,KAAK,kBAAZ,SACE,cAAC,EAAD,CAAetD,YAAaA,EAAazC,eAAgBA,EAAgBD,YAAaA,MAExF,cAAC,IAAD,CAAOgG,KAAK,UAAZ,SACE,cAAC,EAAD,CAAQ/F,eAAgBA,EAAgBD,YAAaA,EAAawD,SAAUA,MAE9E,cAAC,IAAD,CAAOwC,KAAK,IAAZ,SACE,cAAC,EAAD,eCnGClG,EAAcmG,0BA6BZC,MA3Bf,WAEE,MAA0BhG,qBAA1B,mBAAOrB,EAAP,KAAcC,EAAd,KACA,EAAgCoB,qBAASuB,eAAe0E,QAAQ,UAAhE,mBAAO3C,EAAP,KAAiBxD,EAAjB,KACA,EAAsCE,mBAASuB,eAAe0E,QAAQ,SAAW,CAAEjH,MAAOuC,eAAe0E,QAAQ,SAAUlH,KAAMwC,eAAe0E,QAAQ,QAAShH,QAAS6D,OAAOvB,eAAe0E,QAAQ,aAAgB,MAAxN,mBAAOzD,EAAP,KAAoBzC,EAApB,KACA,EAA0CC,oBAAS,GAAnD,mBAAOkG,EAAP,KAAsBC,EAAtB,KAaA,OAVAC,qBAAU,WAERjH,MADY,gBAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJX,EAAS,YAAIW,SAEhB,CAACiD,IAIF,qBAAKhD,UAAU,MAAf,SACA,cAACI,EAAYyG,SAAb,CAAsBvE,MAAOU,EAA7B,SACE,cAAC,EAAD,CAAQ7D,MAAOA,EAAOC,SAAUA,EAAU0E,SAAUA,EAAUxD,YAAaA,EAAaC,eAAgBA,EAAgByC,YAAaA,EAAa0D,cAAeA,EAAeC,iBAAkBA,SChBzLG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpH,MAAK,YAAkD,IAA/CqH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4456eee1.chunk.js","sourcesContent":["\r\n\r\nconst AllData = ({ users, setUsers }) => {\r\n\r\n  let dataList;\r\n\r\n  if(!users){\r\n    const url = '/account/all';\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUsers([...data])\r\n        dataList = data.map(user => {\r\n          return(\r\n            <tr key={user._id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.balance}</td>\r\n            </tr>\r\n          )\r\n        })\r\n      });\r\n  } else {\r\n    dataList = users.map(user => {\r\n      return (\r\n      <tr key={user._id}>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.balance}</td>\r\n      </tr>\r\n      )\r\n  });\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2>All User Data</h2>\r\n        </div>\r\n        { users ? \r\n          <div className=\"tableDiv table-responsive\">\r\n            <table className=\"table table-striped table-hover \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Balance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataList}\r\n              </tbody>\r\n            </table>\r\n          </div> \r\n          : \r\n          <h4>No user data currently available.</h4>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllData\r\n","import { useContext } from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\nconst Balance = () => {\r\n\r\n  const user = useContext(UserContext);\r\n  const balance = user.balance;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Your Current Balance</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\"><strong>${balance}</strong></p>\r\n          {balance <= 0 ? <p className=\"negative\">You need to deposit funds before making any withdrawals.</p>: <p>Welcome, {user.name}! Do you want to make a deposit or withdrawal today? If so--just select the correct action above.</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { useState } from 'react';\r\n\r\nconst CreateAccount = ({ setLoggedIn, setCurrentUser }) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    const url = `/account/create/${name}/${email.toLowerCase()}/${password}`;\r\n    (async () => {\r\n      const resCreate = await fetch(url, {\r\n        method: 'POST'\r\n      });\r\n      if(resCreate.status === 409){\r\n        // console.log('Email already attached to existing account. Please log in.');\r\n        alert('Error: this email address is already attached to an account. Please log in to your existing account.');\r\n        return null;\r\n      }\r\n\r\n      if(resCreate.status === 201){\r\n        \r\n        setCurrentUser({name: name, email: email.toLowerCase(), balance: 0});\r\n        sessionStorage.setItem('name', `${name}`);\r\n        sessionStorage.setItem('email', `${email}`);\r\n        sessionStorage.setItem('balance', `${0}`);\r\n\r\n        setSuccess(true);\r\n        setLoggedIn(true);\r\n      \r\n        \r\n      }\r\n\r\n    })();\r\n    \r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let validated = false; \r\n\r\n    if(e.target.id === 'name'){\r\n      setName(e.target.value);\r\n      if(e.target.value !== '' && /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setNameError(true);\r\n      } else {\r\n        setNameError(false);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'email'){\r\n      setEmail(e.target.value);\r\n      if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.value) && name !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.value)){\r\n        setEmailError(false);\r\n      } else {\r\n        setEmailError(true);\r\n      }\r\n      if(name === ''){\r\n        setNameError(true);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'password') {\r\n      setPassword(e.target.value);\r\n      if(e.target.value !== '' && e.target.value.length >= 8 && name !== '' && /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) ){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value.length < 8) {\r\n        setPasswordError(true);\r\n      } else {\r\n        setPasswordError(false);\r\n      }\r\n      if(name === ''){\r\n        setNameError(true);\r\n      }\r\n      if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.value))){\r\n        setEmailError(true);\r\n      }\r\n    }\r\n    \r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    } \r\n    if(e.target.value !== '' && validated) {\r\n      setBtnDisable(false);\r\n    }\r\n\r\n  }\r\n\r\n  const handleNewCreateUser = () => {\r\n    setSuccess(false);\r\n    setCurrentUser(null);\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Create Account</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n        {success === true ? \r\n          <>\r\n          <p className=\"card-text\">Congratulations, you have successfully created an account with Bad Bank! If you would like to create another account, please click below.</p>\r\n          <button type=\"button\" onClick={handleNewCreateUser} className=\"btn btn-dark\">Create Another Account</button>\r\n          </>\r\n          : \r\n          <>\r\n            <h4>Please fill out this form to create your new Bad Bank account.</h4> \r\n            <p className=\"card-text\">Please note, you will not be able to submit the form without first providing a name, email address, and password of at least 8 characters length.</p>\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Name: </label><br />\r\n                <input type=\"text\" placeholder=\"Your Name\" id=\"name\" onChange={handleChange} className=\"form-control\" />\r\n                {nameError ? <p className=\"negative smallP\">You must enter a name to submit the form.</p> : null }\r\n                <label className=\"form-label\">Email: </label> <br />\r\n                <input type=\"email\" placeholder=\"Your Email Address\" id=\"email\" onChange={handleChange} className=\"form-control\" />\r\n                {emailError ? <p className=\"negative smallP\">You must enter an email address to submit the form.</p> : null }\r\n                <label className=\"form-label\">Password:</label> <br />\r\n                <input type=\"password\" minLength=\"8\" placeholder=\"Password\" id=\"password\" onChange={handleChange} className=\"form-control\" /> \r\n                {passwordError ? <p className=\"negative smallP\">Your password must be at least 8 characters long.</p> : null }\r\n                <br />\r\n                {btnDisable ? <button type=\"button\" disabled={true} onClick={handleSubmit} className=\"btn btn-dark\">Create an Account</button> : <button type=\"button\" disabled={false} onClick={handleSubmit} className=\"btn btn-dark\">Create an Account</button>}\r\n                \r\n              </div>\r\n            </form>\r\n          </>\r\n        }\r\n        </div>           \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateAccount\r\n","import { useState } from 'react';\r\n\r\nconst Deposit = ({ setCurrentUser, currentUser }) => {\r\n\r\n  const [ depositAmt, setDepositAmt ] = useState(0);\r\n  const [ success, setSuccess ] = useState(false);\r\n  const [ btnDisable, setBtnDisable ] = useState(true);\r\n  const [ negError, setNegError ] = useState(false);\r\n\r\n  const balance = currentUser.balance;\r\n\r\n  const handleChange = (e) => {\r\n    setDepositAmt(e.target.value);\r\n  \r\n    if(e.target.value !== undefined || null || '') {\r\n      setBtnDisable(false);\r\n    } \r\n    if (e.target.value === '') {\r\n      setBtnDisable(true);\r\n    }\r\n    if (e.target.value <= 0){\r\n      setBtnDisable(true);\r\n      setNegError(true);\r\n    } else {\r\n      setNegError(false);\r\n    }\r\n  }\r\n\r\n  const updateBalance = () => {\r\n    let newBalance = Number(balance) + Number(depositAmt);\r\n    return newBalance\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const email = currentUser.email;\r\n    \r\n    const newBalance = updateBalance();\r\n    const url = `/account/updateBalance/${email}/${newBalance}`;\r\n    (async () => {\r\n      const resBalance = await fetch(url, {\r\n        method: 'PUT'\r\n      });\r\n      \r\n      if(resBalance.status === 204){\r\n\r\n        setCurrentUser({name: currentUser.name, email: currentUser.email, balance: Number(newBalance)});\r\n        setDepositAmt(0);\r\n        setSuccess(true);\r\n        sessionStorage.setItem('balance', `${newBalance}`);\r\n      \r\n      }\r\n      \r\n      \r\n    })();\r\n    \r\n  }\r\n\r\n  const handleAddition = () => {\r\n    setSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Make a Deposit</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">Your current account balance is: <strong>${balance}</strong></p>\r\n          {success ? \r\n            <>\r\n            <p>You have successfully made your deposit. Thank you for using Bad Bank! For any of your additional banking needs, please select the desired action above.</p> \r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddition}>Make Another Deposit</button>\r\n            </>\r\n            : \r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Enter Your Deposit Amount:</label>\r\n                <input type=\"number\" min=\"0\" placeholder=\"Deposit Amount\" className=\"form-control\" onChange={handleChange} />\r\n                {negError ? <p className=\"negative smallP\">We can only accept positive number values for a deposit. If you wish to make a withdrawal, please go to the \"Withdraw\" section of the Bad Bank Website.</p> : <br /> }\r\n                {btnDisable ? <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={true} >Make Deposit</button> : <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={false} >Make Deposit</button>}\r\n              </div>            \r\n            </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Deposit\r\n","export default __webpack_public_path__ + \"static/media/BBLogo.e3fe1911.png\";","import BBLogo from './Images/BBLogo.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={BBLogo} className=\"card-img-top\" alt=\"Bad Bank Logo\"/>\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">Bad Bank Home</h2>\r\n        <p className=\"card-text\">We would like to welcome you to Bad Bank! We're not a very good bank, because we lack any security measures. You probably definitely should not trust us with your money or banking needs. Don't give us your real password either. You've been politely warned.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useState } from 'react';\r\n\r\nconst Login = ({ loggedIn, setLoggedIn, setCurrentUser }) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n\r\n\r\n  const handleSubmit = () => {\r\n    //verifies user submitted information against user information in database\r\n    const url = `/account/login/${email.toLowerCase()}/${password}`;\r\n    (async () => {\r\n      const res = await fetch(url);\r\n      if(res.status === 401 || res.status === 409){\r\n        alert(`Either user email or user password do not match our database. If you have not yet created an account, please do so by clicking 'Create Account'`);\r\n      } else {\r\n        const data = await res.json();\r\n        \r\n        if(data){\r\n          setLoggedIn(true);\r\n          //updates current user with database information\r\n          setCurrentUser({...data});\r\n          sessionStorage.setItem('name', `${data.name}`);\r\n          sessionStorage.setItem('email', `${data.email}`);\r\n          sessionStorage.setItem('balance', `${data.balance}`);\r\n      }\r\n      }\r\n    })();\r\n  }\r\n\r\n  //logic for logging in as Demo User account\r\n  const handleDemoSubmit = () => {\r\n    const url = '/account/login/tester@test.ing/testing123';\r\n    (async () => {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      if(data){\r\n        setLoggedIn(true);\r\n        setCurrentUser({...data});\r\n        sessionStorage.setItem('name', `${data.name}`);\r\n        sessionStorage.setItem('email', `${data.email}`);\r\n        sessionStorage.setItem('balance', `${data.balance}`);\r\n      }\r\n    })()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let validated = false; \r\n\r\n    if(e.target.id === 'email'){\r\n      setEmail(e.target.value);\r\n      if(e.target.value !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setEmailError(true);\r\n      } else {\r\n        setEmailError(false);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'password') {\r\n      setPassword(e.target.value);\r\n      if(e.target.value !== '' && e.target.value.length >= 8 && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value.length < 8) {\r\n        setPasswordError(true);\r\n      } else {\r\n        setPasswordError(false);\r\n      }\r\n      if(email === ''){\r\n        setEmailError(true);\r\n      }\r\n    }\r\n    \r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    } \r\n    if(e.target.value !== '' && validated) {\r\n      setBtnDisable(false);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Login</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {loggedIn ? \r\n          <p>Congratulations, you have successfully logged in to your account.</p>\r\n          :\r\n          <form onsubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email:</label> <br />\r\n            <input className=\"form-control\" type=\"text\" onChange={handleChange} id=\"email\" placeholder=\"Account Holder Email\"></input>\r\n            {emailError ? <p className=\"negative smallP\">You must enter a previously registered email address to login. If you do not yet have an account, go to \"Create An Account\" to sign up now.</p> : null }\r\n            <label className=\"form-label\">Password:</label> <br />\r\n            <input type=\"password\" minLength=\"8\" placeholder=\"Password\" id=\"password\" onChange={handleChange} className=\"form-control\" /> \r\n            {passwordError ? <p className=\"negative smallP\">Your password must be at least 8 characters long.</p> : null } <br />\r\n            {btnDisable ? <button type=\"button\" disabled={true} onClick={handleSubmit} className=\"btn btn-dark\">Login</button> : <button type=\"button\" disabled={false} onClick={handleSubmit} className=\"btn btn-dark\">Login</button>}\r\n            <button type=\"button\" disabled={false} onClick={handleDemoSubmit} className=\"btn btn-dark\" style={{'marginLeft': '10px'}}>Demo Account Login</button>\r\n            </div>\r\n          </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","const Logout = ({ setCurrentUser, setLoggedIn, loggedIn }) => {\r\n\r\n  let logged = loggedIn;\r\n  \r\n  const handleConfirm = () =>{\r\n    sessionStorage.clear();\r\n    setCurrentUser(null);\r\n    setLoggedIn(false);\r\n    logged = false;\r\n  } \r\n\r\n\r\n  return (\r\n    <div>\r\n      {logged ? \r\n        <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Confirm Logout Request</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\"><strong>Please click below to confirm that you want to log out of this banking session.</strong></p>\r\n          <button onClick={handleConfirm} type=\"button\" className=\"btn btn-dark\">Confirm Logout</button>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Logged Out</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\"><strong>You have successfully logged out of Bad Bank.</strong></p>\r\n        </div>\r\n      </div>\r\n      }    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout\r\n","import { useState } from 'react';\r\n\r\nconst Withdraw = ({ setCurrentUser, currentUser }) => {\r\n  const [ withdrawalAmt, setWithdrawalAmt ] = useState(0);\r\n  const [ success, setSuccess ] = useState(false);\r\n  const [ warnOverdraft, setWarnOverdraft ] = useState(false);\r\n  const [ btnDisable, setBtnDisable ] = useState(true);\r\n  const [ negError, setNegError ] = useState(false);\r\n\r\n  const balance = currentUser.balance;\r\n\r\n  const handleChange = (e) => {\r\n    setWithdrawalAmt(e.target.value);\r\n    \r\n    if(warnOverdraft) setWarnOverdraft(false);\r\n    if(e.target.value !== null || undefined || '') {\r\n      setBtnDisable(false);\r\n    }\r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    }\r\n    if (e.target.value <= 0){\r\n      setBtnDisable(true);\r\n      setNegError(true);\r\n    } else {\r\n      setNegError(false);\r\n    }\r\n  }\r\n\r\n  const updateBalance = () => {\r\n    let newBalance = Number(balance) - Number(withdrawalAmt);\r\n    if(newBalance <= 0){\r\n      setWarnOverdraft(true);\r\n    }\r\n    return newBalance;\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const email = currentUser.email;\r\n    \r\n    const newBalance = updateBalance();\r\n    if (newBalance < 0) {\r\n      setWarnOverdraft(true);\r\n      return;\r\n    } else {\r\n      const url = `/account/updateBalance/${email}/${newBalance}`;\r\n      (async () => {\r\n        const resBalance = await fetch(url, {\r\n          method: 'PUT'\r\n        });\r\n\r\n        if(resBalance.status === 204){\r\n\r\n          setCurrentUser({ email: currentUser.email, name: currentUser.name, balance: Number(newBalance) });\r\n          setWithdrawalAmt(0);\r\n          setSuccess(true);\r\n          sessionStorage.setItem('balance', `${newBalance}`);\r\n\r\n        }\r\n        \r\n      })();\r\n    }\r\n    \r\n  }\r\n\r\n  const handleAddition = () => {\r\n    setSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Make a Withdrawal</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">Your current account balance is: <strong>${balance}</strong></p>\r\n          {warnOverdraft === true ? <p className=\"negative\">You cannot make the requested withdraw as you have insufficient funds for that amount. <br /> Please revise the requested amount below, or deposit sufficient funds prior to withdrawal.</p> : null}\r\n          {success ? \r\n            <>\r\n            <p>You have successfully made your withdrawal. Thank you for using Bad Bank! For any of your additional banking needs, please select the desired action above.</p> \r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddition}>Make Another Withdrawal</button>\r\n            </>\r\n            : \r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Enter Your Withdrawal Amount:</label>\r\n                <input type=\"number\" min=\"0\" placeholder=\"Withdrawal Amount\" className=\"form-control\" onChange={handleChange} /> \r\n                {negError ? <p className=\"negative smallP\">We can only accept positive number values for a withdrawal. If you wish to make a deposit, please go to the \"Deposit\" section of the Bad Bank Website.</p> : <br />}\r\n                {btnDisable ? <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={true} >Withdraw Cash</button> : <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={false} >Withdraw Cash</button>}\r\n              </div>            \r\n            </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Withdraw\r\n","import { useState } from 'react';\r\n\r\nconst Transfer = ({ currentUser, setCurrentUser }) => {\r\n\r\n  const [ transferAmt, setTransferAmt ] = useState(0);\r\n  const [ transferEmail, setTransferEmail ] = useState('');\r\n  const [ emailError, setEmailError ] = useState(false);\r\n  const [ success, setSuccess ] = useState(false);\r\n  const [ warnOverdraft, setWarnOverdraft ] = useState(false);\r\n  const [ btnDisable, setBtnDisable ] = useState(true);\r\n  const [ negError, setNegError ] = useState(false);\r\n  const [ transError, setTransError ] = useState(false);\r\n  \r\n  const handleNewTransfer = () => {\r\n    setTransferAmt(0);\r\n    setTransferEmail('');\r\n    setEmailError(false);\r\n    setSuccess(false);\r\n    setWarnOverdraft(false);\r\n    setBtnDisable(true);\r\n    setNegError(false);\r\n    setTransError(false);\r\n  }\r\n\r\n  const updateTransferBalance = (transferBalance) => {\r\n    let newBalance = Number(transferBalance) + Number(transferAmt);\r\n    return newBalance\r\n  }\r\n\r\n  const updateBalance = () => {\r\n    let newBalance = Number(currentUser.balance) - Number(transferAmt);\r\n    if(newBalance <= 0){\r\n      setWarnOverdraft(true);\r\n    }\r\n    return newBalance;\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let validated = false;\r\n\r\n    if(e.target.id === 'amount'){\r\n      setTransferAmt(e.target.value);\r\n      \r\n      if(warnOverdraft) setWarnOverdraft(false);\r\n      if(e.target.value > 0 && transferEmail !== '') {\r\n          setBtnDisable(false);\r\n      }\r\n\r\n      if (e.target.value <= 0){\r\n        setBtnDisable(true);\r\n        setNegError(true);\r\n      } else {\r\n        setNegError(false);\r\n      }\r\n    } \r\n    \r\n    if (e.target.id === 'transferEmail'){\r\n      setTransferEmail(e.target.value);\r\n      if(e.target.value !== '' && negError === false && transferAmt > 0){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setEmailError(true);\r\n      } else {\r\n        setEmailError(false);\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const email = currentUser.email;\r\n    const newBalance = updateBalance();\r\n    if (newBalance < 0) {\r\n      setWarnOverdraft(true);\r\n      alert('You are attempting to transfer more money than is available in your account. We cannot perform your transfer request at this time. Please adjust the amount you wish to transfer to a number that is less than or equal to your current balance.');\r\n      return;\r\n    } else {\r\n      \r\n      const userUrl  = `/account/checkUser/${transferEmail.toLowerCase()}`\r\n      const balanceUrl = `/account/updateBalance/${email}/${newBalance}`;\r\n      \r\n      (async () => {\r\n        //check for transfer email in users\r\n        const res = await fetch(userUrl);\r\n\r\n        //if transfer recipient does not have bad bank account or wrong e-mail address\r\n        if(res.status === 409){\r\n          alert('The user you are attempting to send money to does not have a Bad Bank account. At this time our bank cannot transfer money to those who bank elsewhere. We apologize for any inconvenience.');\r\n          return;\r\n        }\r\n        \r\n        const transferUser = await res.json();\r\n        \r\n        if(transferUser && newBalance >= 0){\r\n          //debit transfer amount from currentUser account\r\n          const res = await fetch(balanceUrl, {\r\n            method: 'PUT'\r\n          });\r\n    \r\n          if(res.status === 204){\r\n            setCurrentUser({...currentUser, balance: Number(newBalance) });  \r\n            sessionStorage.setItem('balance', `${newBalance}`);\r\n            //deposit transfer amount to transfer account\r\n            const newTransferBalance = updateTransferBalance(transferUser.balance);\r\n            const transBalanceUrl = `/account/updateBalance/${transferUser.email}/${newTransferBalance}`;\r\n            (async () => {\r\n              const resBalance = await fetch(transBalanceUrl, {\r\n                method: 'PUT'\r\n              });\r\n\r\n              if(resBalance.status === 204){\r\n                setTransferAmt(0);\r\n                setSuccess(true);\r\n              }\r\n\r\n              \r\n            })();\r\n          }\r\n        } else {\r\n          //will update page to note there was an error and no funds transfer occurred\r\n          setTransError(true);\r\n        }\r\n        \r\n      })();\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Transfer Money to Another Bad Bank Customer</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n        {transError ? \r\n          <>\r\n            <p><strong>An error has occurred during the transfer process. Typical errors could include attempting to send money to an e-mail address that is not connected to a current Bad Bank account holder, or attempting to transfer a higher amount of money than currently exists in your Bad Bank account. Please check your balance information or note any alert messages you have received during your transfer request process to best determine the issue you are experiencing. If you would like to attempt the transfer again, click the button below.</strong></p>\r\n            <button type=\"button\" onClick={handleNewTransfer} className=\"btn btn-dark\">New Transfer Request</button>\r\n          </>\r\n        : \r\n          <>\r\n          <p className=\"card-text\">Your current account balance is: <strong>${currentUser.balance}</strong></p>\r\n          {(success === true) ? \r\n            <>\r\n            <p className=\"card-text\">Congratulations, you have successfully transferred funds to another Bad Bank account holder. If you would like to make additional transfers of funds, please click the button below.</p>\r\n            <button type=\"button\" onClick={handleNewTransfer} className=\"btn btn-dark\">New Transfer Request</button>\r\n            </>\r\n            : \r\n            <>\r\n              <h4>Please fill out this form to transfer money to another Bad Bank account holder.</h4> \r\n              <p className=\"card-text\">Please note, you will not be able to submit the form without first providing the e-mail address of the account holder and the amount you wish to transfer to their account. You will need to use the official e-mail address associated with the individual's account to be able to transfer funds.</p>\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Transfer Recipient Account Holder's E-mail Address: </label><br />\r\n                  <input type=\"text\" placeholder=\"Recipient Email Address\" id=\"transferEmail\" onChange={handleChange} className=\"form-control\" />\r\n                  {emailError ? <p className=\"negative smallP\">You must enter an email address to submit the form.</p> : null }\r\n                  <label className=\"form-label\">Enter Your Transfer Amount:</label>\r\n                  <input type=\"number\" min=\"0\" placeholder=\"Transfer Amount\" className=\"form-control\" onChange={handleChange} id=\"amount\" /> \r\n                  {negError ? <p className=\"negative smallP\">We can only accept positive number values for a transfer. If you wish to receive money from another Bad Bank account holder, they will need to initiate the transfer of funds to your account.</p> : <br />}\r\n                  {btnDisable ? <button type=\"button\" disabled={true} onClick={handleSubmit} className=\"btn btn-dark\">Transfer Money</button> : <button type=\"button\" disabled={false} onClick={handleSubmit} className=\"btn btn-dark\">Transfer Money</button>}\r\n                  \r\n                </div>\r\n              </form>\r\n            </>\r\n          }\r\n          </>\r\n        }\r\n        </div>           \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transfer\r\n","import { useState } from 'react';\r\n\r\nfunction DeleteAccount({ currentUser, setLoggedIn, setCurrentUser }) {\r\n\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n\r\n  const handleClick = (e) => {\r\n    let newVal = !(e.target.checked);\r\n    setBtnDisable(newVal);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    //prevents deletion of demo account\r\n    if(currentUser.email === 'tester@test.ing'){\r\n      alert('You are currently logged in under our demo account--we cannot delete this account. To use delete functionality, please create a new Bad Bank account.');\r\n      return;\r\n    }\r\n\r\n    //delete call to api route to delete user from DB\r\n    const email = currentUser.email;\r\n    const url = `/account/deleteAccount/${email}`;\r\n\r\n    (async () => {\r\n      const res = await fetch(url, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if(res.status !== 200){\r\n        alert('There was an error when deleting this account.');\r\n        return null;\r\n      }\r\n\r\n      if(res.status === 200){\r\n        alert('Your account has been deleted. We are sorry to lose you as a Bad Bank customer, but hope that you find a better bank for your future business.');\r\n\r\n        //setTimeout runs after client dismisses alert\r\n        setTimeout(() => {\r\n        \r\n          sessionStorage.clear();\r\n          setCurrentUser(null);\r\n          setLoggedIn(false);\r\n    \r\n          window.location.reload()\r\n        }, 5)\r\n      }\r\n      \r\n    })();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Delete Your Bad Bank Account</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h4>Account Deletion Instructions</h4>\r\n          <p className='card-text'>\r\n            Please note, that if you click the button below your Bad Bank account will be permanently deleted and we will not be able to retrieve any of your credentials, balance, or other transaction history. If you delete your account by mistake, you will need to sign up for a new account to continuing using Bad Bank services.\r\n          </p>\r\n          <form>\r\n            <div className=\"mb-3\">\r\n              <input type={'checkbox'} id='ackDelete' name='ackDelete' onClick={(e) => handleClick(e)} />\r\n              <label for='ackDelete' className='form-label'>I understand that submitting this request will permanently delete my Bad Bank account.</label>\r\n              <br />\r\n              { btnDisable ? <button type='button' disabled={true} className=\"btn btn-dark\">Delete My Account</button> : <button type='button' disabled={false} className=\"btn btn-dark\" onClick={handleDelete} >Delete My Account</button> }\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAccount","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport AllData from \"./AllData\";\r\nimport Balance from \"./Balance\";\r\nimport CreateAccount from \"./CreateAccount\";\r\nimport Deposit from \"./Deposit\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Logout from \"./Logout\";\r\nimport Withdraw from \"./Withdraw\";\r\nimport Transfer from \"./Transfer\";\r\nimport DeleteAccount from \"./DeleteAccount\";\r\n\r\nconst NavBar = ({ users, loggedIn, setLoggedIn, setCurrentUser, currentUser }) => {\r\n\r\n  return (\r\n    <Router>\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <Link to=\"/\" className=\"navbar-brand\" title=\"Bad Bank Home Page\">Bad Bank</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              { (currentUser === null) ? \r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/create-account\" className=\"nav-link\" title=\"Click here to sign up for a new account.\">Create Account</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\" title=\"If you have an existing account, click here to login.\">Login</Link>\r\n                  </li>\r\n                </>\r\n              :\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/deposit\" className=\"nav-link\" title=\"Make a deposit to your account.\">Deposit</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/withdraw\" className=\"nav-link\" title=\"Make a withdrawal from your account.\">Withdraw</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/transfer\" className=\"nav-link\" title=\"Make a transfer from your account to another Bad Bank account.\">Transfer</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/balance\" className=\"nav-link\" title=\"Check your balance information.\">Balance</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/all-data\" className=\"nav-link\" title=\"View all user data.\">All Data</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to='/delete-account' className=\"nav-link\" title=\"Delete My Bad Bank Account\">Delete Account</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/logout\" className=\"nav-link\" title=\"Logout.\">Logout</Link>\r\n                  </li>\r\n                </>\r\n              }\r\n            </ul>\r\n            { (currentUser !== null) ? \r\n              <div className=\"navbar-text-box\">\r\n                <span class=\"navbar-text\">Welcome, {currentUser.name}!</span>\r\n              </div>\r\n            : <></>}\r\n          </div>    \r\n        </div>\r\n      </nav>\r\n\r\n        {/* switch statement checks for correct routing path */}\r\n        <Switch>\r\n          <Route path=\"/create-account\">\r\n            <CreateAccount loggedIn={loggedIn} setLoggedIn={setLoggedIn} setCurrentUser={setCurrentUser} />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} setCurrentUser={setCurrentUser} />\r\n          </Route>\r\n          <Route path=\"/deposit\">\r\n            <Deposit setCurrentUser={setCurrentUser} currentUser={currentUser} />\r\n          </Route>\r\n          <Route path=\"/withdraw\" >\r\n            <Withdraw setCurrentUser={setCurrentUser} currentUser={currentUser} />\r\n          </Route>\r\n          <Route path=\"/transfer\" >\r\n            <Transfer setCurrentUser={setCurrentUser} currentUser={currentUser} setLoggedIn={setLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/balance\">\r\n            <Balance />\r\n          </Route>\r\n          <Route path=\"/all-data\">\r\n            <AllData users={users} />\r\n          </Route>\r\n          <Route path='/delete-account'>\r\n            <DeleteAccount currentUser={currentUser} setCurrentUser={setCurrentUser} setLoggedIn={setLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/logout\">\r\n            <Logout setCurrentUser={setCurrentUser} setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default NavBar\r\n","import { useState, useEffect, createContext } from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar';\r\n\r\n\r\nexport const UserContext = createContext();\r\n\r\nfunction App() {\r\n  \r\n  const [users, setUsers] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(sessionStorage.getItem('email') ? true : false);\r\n  const [currentUser, setCurrentUser] = useState(sessionStorage.getItem('email') ? { email: sessionStorage.getItem('email'), name: sessionStorage.getItem('name'), balance: Number(sessionStorage.getItem('balance')) } : null);\r\n  const [accountExists, setAccountExists] = useState(false);\r\n  \r\n  //pulling all account data from database\r\n  useEffect(() => {\r\n    const url = '/account/all';\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUsers([...data]);\r\n      });\r\n  }, [currentUser]);\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <UserContext.Provider value={currentUser} >\r\n      <NavBar users={users} setUsers={setUsers} loggedIn={loggedIn} setLoggedIn={setLoggedIn} setCurrentUser={setCurrentUser} currentUser={currentUser} accountExists={accountExists} setAccountExists={setAccountExists} />\r\n    </UserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}